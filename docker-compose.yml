# docker-compose.yml
services:
  # one-shot builder to produce web/dist and copy it into a named volume
  web-build:
    build:
      context: ./web
      dockerfile: Dockerfile
    command: ["sh","-c","npm ci && npm run build && rm -rf /web_dist/* && cp -a dist/. /web_dist"]
    volumes:
      - web_dist:/web_dist
    # run once, then stop
    restart: "no"

  nginx:
    build: ./apps/nginx
    container_name: nginx
    depends_on:
      web-build:
        condition: service_completed_successfully
      api-gateway:
        condition: service_started
      auth:
        condition: service_started
      user:
        condition: service_started
    ports:
      - "4443:443"
    volumes:
      - web_dist:/var/www/web:ro
      - ./apps/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./apps/nginx/certs:/etc/nginx/certs:ro
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    expose: ["3000"]
    restart: unless-stopped
    environment:
    - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
    - COOKIE_SECRET=${COOKIE_SECRET}
    - PUBLIC_FRONT_URL=${PUBLIC_FRONT_URL}

  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    expose: ["3001"]
    restart: unless-stopped
    volumes:
      - auth_data:/app/data
    environment:
      - NODE_ENV=development
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - ACCESS_TTL=${ACCESS_TTL}
      - REFRESH_TTL=${REFRESH_TTL}
      - AUTH_DB_PATH=/app/data/app.db
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - PUBLIC_FRONT_URL=${PUBLIC_FRONT_URL}

  user:
    build:
      context: .
      dockerfile: apps/user/Dockerfile
    expose: ["3002"]
    restart: unless-stopped
    volumes:
      - user_data:/app/data
    environment:
      - USER_DB_PATH=/app/data/app.db

  match:
    build:
      context: .
      dockerfile: apps/match/Dockerfile
    expose: ["3003"]
    restart: unless-stopped
    volumes:
      - match_data:/app/data
    environment:
      - MATCH_DB_PATH=/app/data/app.db

  game-engine:
    build:
      context: .
      dockerfile: apps/game-engine/Dockerfile
    expose: ["3004"]
    restart: unless-stopped

  game-matchmaking:
    build:
      context: .
      dockerfile: apps/game-matchmaking/Dockerfile
    expose: ["3005"]
    restart: unless-stopped

volumes:
  web_dist:
    name: web_dist
  auth_data:
    name: auth_data
  user_data:
    name: user_data
  match_data:
    name: match_data